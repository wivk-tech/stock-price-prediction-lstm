# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VDd13Kj3OkwPuCGsumrV4KHbJTRpKU9o
"""

# app.py

import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import load_model
import datetime

# Page config
st.set_page_config(page_title="Stock Price Predictor", layout="centered")

st.title("ðŸ“ˆ Stock Price Trend Prediction using LSTM")
st.markdown("Enter a stock ticker and date range to forecast the price trend using an LSTM model.")

# Sidebar inputs
ticker = st.sidebar.text_input("Enter Stock Ticker Symbol", value='AAPL')
start_date = st.sidebar.date_input("Start Date", datetime.date(2015, 1, 1))
end_date = st.sidebar.date_input("End Date", datetime.date(2024, 12, 31))

# Load model
@st.cache_resource
def load_trained_model():
    return load_model("models/stock_lstm.h5")

model = load_trained_model()

# Download data
df = yf.download(ticker, start=start_date, end=end_date)

if df.empty:
    st.error("No data found. Please check the ticker or date range.")
    st.stop()

# Display data
st.subheader(f"{ticker} Closing Price History")
st.line_chart(df['Close'])

# Preprocessing
data = df[['Close']]
scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(data)

# Prepare input data
sequence_length = 60
X_test = []
for i in range(sequence_length, len(scaled_data)):
    X_test.append(scaled_data[i-sequence_length:i])

X_test = np.array(X_test)

# Make predictions
predicted = model.predict(X_test)
predicted_prices = scaler.inverse_transform(predicted)
real_prices = scaler.inverse_transform(scaled_data[sequence_length:])

# Plot predictions
st.subheader("ðŸ“Š Predicted vs Actual Prices")
fig, ax = plt.subplots(figsize=(10, 5))
ax.plot(real_prices, label="Actual Price")
ax.plot(predicted_prices, label="Predicted Price")
ax.set_title(f"{ticker} Price Prediction")
ax.set_xlabel("Days")
ax.set_ylabel("Price")
ax.legend()
st.pyplot(fig)